{"version":3,"sources":["Object/merge.js","v360.js","appendCanvas.js","preload.js","resizeCanvas.js","resizeImage.js","setImage.js","V360DOM.js","events/load.js","events/mousedown.js","events/mousemove.js","events/mouseup.js","events/resize.js"],"names":["Object","prototype","merge","object","key","this","V360","[object Object]","$v360","document","querySelectorAll","i","l","length","init","$target","props","target","srcs","undefined","sprite","frames","dragSensitivity","canvas","appendCanvas","imgs","currentImg","mousePressing","mouseStart","loadedImages","JSON","parse","getAttribute","replace","preload","onresize","V360DOM","window","addEventListener","createElement","resizeCanvas","ctx","getContext","appendChild","j","img","push","Image","onload","src","slice","$canvas","width","offsetWidth","height","offsetHeight","resizeImage","$img","setImage","n","clearRect","drawImage","mousedownHandle","onmousedown","mouseupHandle","onmouseup","mousemoveHandle","onmousemove","resizeHandle","destroy","removeEventListener","remove","start","restart","e","pageX","preventDefault","mouseMoved","roundMouseMoved","Math","round","abs"],"mappings":"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","sourcesContent":["Object.prototype.merge = function(object){\r\n    for (const key in object) this[key] = object[key];\r\n}","class V360{\r\n\r\n    constructor(){\r\n\r\n        const $v360 = document.querySelectorAll('[v360], [V360]');\r\n\r\n        for (let i = 0, l = $v360.length; i < l; i++)\r\n            this.init($v360[i]);\r\n\r\n    }\r\n\r\n    init($target){\r\n\r\n        const props = {\r\n\r\n            target: $target,\r\n            \r\n            srcs: undefined,\r\n            sprite: undefined,\r\n            frames: 0,\r\n            dragSensitivity: 5,\r\n\r\n            canvas: this.appendCanvas($target),\r\n\r\n            imgs: [],\r\n            currentImg: 0,\r\n\r\n            mousePressing: undefined,\r\n            mouseStart: 0,\r\n            \r\n            loadedImages: 0\r\n\r\n        };\r\n\r\n        props.merge(JSON.parse($target.getAttribute('v360').replace(/\\'/g, '\"')));\r\n\r\n        this.preload(props);\r\n        this.onresize(props);\r\n\r\n        this.V360DOM($target, props);\r\n\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener('load', () => new V360());","V360.prototype.appendCanvas = function($target){\r\n\r\n    let canvas = {};\r\n\r\n    canvas.target = document.createElement('canvas');\r\n    this.resizeCanvas($target, canvas.target);\r\n\r\n    canvas.ctx = canvas.target.getContext('2d');\r\n\r\n    $target.appendChild(canvas.target);\r\n\r\n    return canvas;\r\n\r\n}","V360.prototype.preload = function(props){\r\n\r\n    // Preload all images\r\n    for(let j = 1; j <= props.frames; j++){\r\n\r\n        // Insert and get img from the array\r\n        const img = props.imgs[props.imgs.push(new Image()) - 1];\r\n\r\n        img.onload = this.onload(props);\r\n\r\n        if(props.sprite){\r\n            img.src = props.sprite;\r\n            break;\r\n        }\r\n\r\n        img.src = props.srcs.replace('#{frame}', ('000' + j).slice(-3));\r\n\r\n    }\r\n\r\n}","V360.prototype.resizeCanvas = function($target, $canvas){\r\n\r\n    $canvas.width = $target.offsetWidth;\r\n    $canvas.height = $target.offsetHeight;\r\n\r\n}","V360.prototype.resizeImage = function($canvas, imgs){\r\n\r\n    for(let i = 0, l = imgs.length; i < l; i++){\r\n\r\n        const $img = imgs[i];\r\n\r\n        // If l == 1 is a sprite\r\n        if($canvas.width <= $canvas.height && l > 1){\r\n\r\n            $img.height = ($img.height * $canvas.width) / $img.width;\r\n            $img.width = $canvas.width;\r\n\r\n        }else{\r\n\r\n            $img.width = ($img.width * $canvas.height) / $img.height;\r\n            $img.height = $canvas.height;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","V360.prototype.setImage = function($canvas, ctx, imgs, n, frames){\r\n\r\n    ctx.clearRect(0, 0, $canvas.width, $canvas.height);\r\n\r\n    // If length == 1 is a sprite\r\n    if(imgs.length > 1)\r\n        ctx.drawImage(imgs[n], 0, 0, imgs[n].width, imgs[n].height);\r\n    else{\r\n        ctx.drawImage(imgs[0],\r\n            -((imgs[0].width / frames) * n),\r\n            0,\r\n            imgs[0].width,\r\n            imgs[0].height\r\n        );\r\n    }\r\n\r\n}","V360.prototype.V360DOM = function($target, props){\r\n\r\n    const mousedownHandle = this.onmousedown(props);\r\n    const mouseupHandle = this.onmouseup(props);\r\n    const mousemoveHandle = this.onmousemove(props);\r\n    const resizeHandle = this.onresize(props);\r\n\r\n    props.canvas.target.addEventListener('mousedown', mousedownHandle);\r\n    window.addEventListener('mouseup', mouseupHandle);\r\n    window.addEventListener('mousemove', mousemoveHandle);\r\n    window.addEventListener('resize', resizeHandle);\r\n\r\n    $target.V360 = {};\r\n\r\n    $target.V360.destroy = () => {\r\n\r\n        props.canvas.target.removeEventListener('mousedown', mousedownHandle);\r\n        window.removeEventListener('mouseup', mouseupHandle);\r\n        window.removeEventListener('mousemove', mousemoveHandle);\r\n        window.removeEventListener('resize', resizeHandle);\r\n\r\n        props.canvas.target.remove();\r\n\r\n    }\r\n\r\n    $target.V360.start = () => this.init($target);\r\n\r\n    $target.V360.restart = () => {\r\n\r\n        $target.V360.destroy();\r\n        $target.V360.start();\r\n\r\n    }\r\n\r\n\r\n}","V360.prototype.onload = function(props){\r\n\r\n    const $canvas = props.canvas.target;\r\n    const ctx = props.canvas.ctx;\r\n    const imgs = props.imgs;\r\n\r\n    return e => {\r\n\r\n        props.loadedImages++;\r\n\r\n        if(props.loadedImages < props.frames && !props.sprite) return;\r\n\r\n        this.resizeImage($canvas, imgs);\r\n\r\n        this.setImage($canvas, ctx, imgs, props.currentImg, props.frames);\r\n\r\n        this.onmousedown(props);\r\n        this.onmouseup(props);\r\n        this.onmousemove(props);\r\n\r\n    }\r\n\r\n}","V360.prototype.onmousedown = function(props){\r\n\r\n    return e => {\r\n\r\n        props.mousePressing = true;\r\n        props.mouseStart = e.pageX;\r\n\r\n    }\r\n\r\n}","V360.prototype.onmousemove = function(props){\r\n\r\n    return e => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(!props.mousePressing) return;\r\n\r\n        let mouseMoved = (props.mouseStart - e.pageX) / props.dragSensitivity;\r\n\r\n        if(mouseMoved > 1) mouseMoved = 1;\r\n        if(mouseMoved < -1) mouseMoved = -1;\r\n\r\n        if(mouseMoved == 1 || mouseMoved == -1){\r\n\r\n            props.mouseStart = e.pageX;\r\n\r\n            let roundMouseMoved = Math.round(mouseMoved);\r\n\r\n            props.currentImg += roundMouseMoved / Math.abs(roundMouseMoved);\r\n\r\n            if(props.currentImg > props.frames - 1) props.currentImg = 0;\r\n            if(props.currentImg < 0) props.currentImg = props.frames - 1;\r\n\r\n            this.setImage(props.canvas.target, props.canvas.ctx, props.imgs, props.currentImg, props.frames);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","V360.prototype.onmouseup = function(props){\r\n\r\n    return () => {\r\n\r\n        props.mousePressing = false;\r\n        props.mouseStart = 0;\r\n\r\n    }\r\n\r\n}","V360.prototype.onresize = function(props){\r\n\r\n    return () => {\r\n\r\n        const $target = props.target;\r\n        const $canvas = props.canvas.target;\r\n\r\n        if($canvas.width != $target.offsetWidth || $canvas.height != $target.height){\r\n\r\n            const ctx = props.canvas.ctx;\r\n            const imgs = props.imgs;\r\n            const currentImg = props.currentImg;\r\n\r\n            this.resizeCanvas($target, $canvas);\r\n            this.resizeImage($canvas, imgs);\r\n\r\n            this.setImage($canvas, ctx, imgs, currentImg, props.frames);\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n}"],"file":"v360-min.js"}