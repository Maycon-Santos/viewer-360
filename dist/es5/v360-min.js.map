{"version":3,"sources":["Object/merge.js","v360.js","appendCanvas.js","preload.js","resizeCanvas.js","resizeImage.js","setImage.js","V360DOM.js","events/load.js","events/mousedown.js","events/mousemove.js","events/mouseup.js","events/resize.js"],"names":["Object","prototype","merge","object","key","this","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","V360","$v360","document","querySelectorAll","l","init","value","$target","srcs","undefined","sprite","frames","dragSensitivity","canvas","appendCanvas","imgs","currentImg","mousePressing","mouseStart","loadedImages","JSON","parse","getAttribute","replace","preload","onresize","V360DOM","window","addEventListener","createElement","resizeCanvas","ctx","getContext","appendChild","j","img","push","Image","onload","src","slice","$canvas","width","offsetWidth","height","offsetHeight","resizeImage","$img","setImage","n","clearRect","drawImage","_this","mousedownHandle","onmousedown","mouseupHandle","onmouseup","mousemoveHandle","onmousemove","resizeHandle","destroy","removeEventListener","remove","start","restart","e","pageX","preventDefault","mouseMoved","roundMouseMoved","Math","round","abs"],"mappings":"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","sourcesContent":["Object.prototype.merge = function(object){\r\n    for (const key in object) this[key] = object[key];\r\n}","class V360{\r\n\r\n    constructor(){\r\n\r\n        const $v360 = document.querySelectorAll('[v360], [V360]');\r\n\r\n        for (let i = 0, l = $v360.length; i < l; i++)\r\n            this.init($v360[i]);\r\n\r\n    }\r\n\r\n    init($target){\r\n\r\n        const props = {\r\n\r\n            target: $target,\r\n            \r\n            srcs: undefined,\r\n            sprite: undefined,\r\n            frames: 0,\r\n            dragSensitivity: 5,\r\n\r\n            canvas: this.appendCanvas($target),\r\n\r\n            imgs: [],\r\n            currentImg: 0,\r\n\r\n            mousePressing: undefined,\r\n            mouseStart: 0,\r\n            \r\n            loadedImages: 0\r\n\r\n        };\r\n\r\n        props.merge(JSON.parse($target.getAttribute('v360').replace(/\\'/g, '\"')));\r\n\r\n        this.preload(props);\r\n        this.onresize(props);\r\n\r\n        this.V360DOM($target, props);\r\n\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener('load', () => new V360());","V360.prototype.appendCanvas = function($target){\r\n\r\n    let canvas = {};\r\n\r\n    canvas.target = document.createElement('canvas');\r\n    this.resizeCanvas($target, canvas.target);\r\n\r\n    canvas.ctx = canvas.target.getContext('2d');\r\n\r\n    $target.appendChild(canvas.target);\r\n\r\n    return canvas;\r\n\r\n}","V360.prototype.preload = function(props){\r\n\r\n    // Preload all images\r\n    for(let j = 1; j <= props.frames; j++){\r\n\r\n        // Insert and get img from the array\r\n        const img = props.imgs[props.imgs.push(new Image()) - 1];\r\n\r\n        img.onload = this.onload(props);\r\n\r\n        if(props.sprite){\r\n            img.src = props.sprite;\r\n            break;\r\n        }\r\n\r\n        img.src = props.srcs.replace('#{frame}', ('000' + j).slice(-3));\r\n\r\n    }\r\n\r\n}","V360.prototype.resizeCanvas = function($target, $canvas){\r\n\r\n    $canvas.width = $target.offsetWidth;\r\n    $canvas.height = $target.offsetHeight;\r\n\r\n}","V360.prototype.resizeImage = function($canvas, imgs){\r\n\r\n    for(let i = 0, l = imgs.length; i < l; i++){\r\n\r\n        const $img = imgs[i];\r\n\r\n        // If l == 1 is a sprite\r\n        if($canvas.width <= $canvas.height && l > 1){\r\n\r\n            $img.height = ($img.height * $canvas.width) / $img.width;\r\n            $img.width = $canvas.width;\r\n\r\n        }else{\r\n\r\n            $img.width = ($img.width * $canvas.height) / $img.height;\r\n            $img.height = $canvas.height;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","V360.prototype.setImage = function($canvas, ctx, imgs, n, frames){\r\n\r\n    ctx.clearRect(0, 0, $canvas.width, $canvas.height);\r\n\r\n    // If length == 1 is a sprite\r\n    if(imgs.length > 1)\r\n        ctx.drawImage(imgs[n], 0, 0, imgs[n].width, imgs[n].height);\r\n    else{\r\n        ctx.drawImage(imgs[0],\r\n            -((imgs[0].width / frames) * n),\r\n            0,\r\n            imgs[0].width,\r\n            imgs[0].height\r\n        );\r\n    }\r\n\r\n}","V360.prototype.V360DOM = function($target, props){\r\n\r\n    const mousedownHandle = this.onmousedown(props);\r\n    const mouseupHandle = this.onmouseup(props);\r\n    const mousemoveHandle = this.onmousemove(props);\r\n    const resizeHandle = this.onresize(props);\r\n\r\n    props.canvas.target.addEventListener('mousedown', mousedownHandle);\r\n    window.addEventListener('mouseup', mouseupHandle);\r\n    window.addEventListener('mousemove', mousemoveHandle);\r\n    window.addEventListener('resize', resizeHandle);\r\n\r\n    $target.V360 = {};\r\n\r\n    $target.V360.destroy = () => {\r\n\r\n        props.canvas.target.removeEventListener('mousedown', mousedownHandle);\r\n        window.removeEventListener('mouseup', mouseupHandle);\r\n        window.removeEventListener('mousemove', mousemoveHandle);\r\n        window.removeEventListener('resize', resizeHandle);\r\n\r\n        props.canvas.target.remove();\r\n\r\n    }\r\n\r\n    $target.V360.start = () => this.init($target);\r\n\r\n    $target.V360.restart = () => {\r\n\r\n        $target.V360.destroy();\r\n        $target.V360.start();\r\n\r\n    }\r\n\r\n\r\n}","V360.prototype.onload = function(props){\r\n\r\n    const $canvas = props.canvas.target;\r\n    const ctx = props.canvas.ctx;\r\n    const imgs = props.imgs;\r\n\r\n    return e => {\r\n\r\n        props.loadedImages++;\r\n\r\n        if(props.loadedImages < props.frames && !props.sprite) return;\r\n\r\n        this.resizeImage($canvas, imgs);\r\n\r\n        this.setImage($canvas, ctx, imgs, props.currentImg, props.frames);\r\n\r\n        this.onmousedown(props);\r\n        this.onmouseup(props);\r\n        this.onmousemove(props);\r\n\r\n    }\r\n\r\n}","V360.prototype.onmousedown = function(props){\r\n\r\n    return e => {\r\n\r\n        props.mousePressing = true;\r\n        props.mouseStart = e.pageX;\r\n\r\n    }\r\n\r\n}","V360.prototype.onmousemove = function(props){\r\n\r\n    return e => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(!props.mousePressing) return;\r\n\r\n        let mouseMoved = (props.mouseStart - e.pageX) / props.dragSensitivity;\r\n\r\n        if(mouseMoved > 1) mouseMoved = 1;\r\n        if(mouseMoved < -1) mouseMoved = -1;\r\n\r\n        if(mouseMoved == 1 || mouseMoved == -1){\r\n\r\n            props.mouseStart = e.pageX;\r\n\r\n            let roundMouseMoved = Math.round(mouseMoved);\r\n\r\n            props.currentImg += roundMouseMoved / Math.abs(roundMouseMoved);\r\n\r\n            if(props.currentImg > props.frames - 1) props.currentImg = 0;\r\n            if(props.currentImg < 0) props.currentImg = props.frames - 1;\r\n\r\n            this.setImage(props.canvas.target, props.canvas.ctx, props.imgs, props.currentImg, props.frames);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","V360.prototype.onmouseup = function(props){\r\n\r\n    return () => {\r\n\r\n        props.mousePressing = false;\r\n        props.mouseStart = 0;\r\n\r\n    }\r\n\r\n}","V360.prototype.onresize = function(props){\r\n\r\n    return () => {\r\n\r\n        const $target = props.target;\r\n        const $canvas = props.canvas.target;\r\n\r\n        if($canvas.width != $target.offsetWidth || $canvas.height != $target.height){\r\n\r\n            const ctx = props.canvas.ctx;\r\n            const imgs = props.imgs;\r\n            const currentImg = props.currentImg;\r\n\r\n            this.resizeCanvas($target, $canvas);\r\n            this.resizeImage($canvas, imgs);\r\n\r\n            this.setImage($canvas, ctx, imgs, currentImg, props.frames);\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n}"],"file":"v360-min.js"}