{"version":3,"sources":["Object/merge.js","v360.js","appendCanvas.js","easingFunctions.js","preload.js","resizeCanvas.js","resizeImage.js","setImage.js","V360DOM.js","events/load.js","events/mousedown.js","events/mousemove.js","events/mouseup.js","events/resize.js","static/restart.js","static/set.js","static/start.js","static/stop.js"],"names":["Object","prototype","merge","object","key","this","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","V360","$v360","document","querySelectorAll","l","init","value","$target","v360","played","restart","srcs","undefined","sprite","frames","dragSensitivity","canvas","appendCanvas","imgs","currentFrame","allowDrag","mousePressing","mouseStart","loadedImages","allLoaded","JSON","parse","getAttribute","replace","preload","onresize","V360DOM","window","addEventListener","createElement","resizeCanvas","ctx","getContext","canvasStyle","webkitTouchCallout","webkitUserSelect","khtmlUserSelect","mozUserSelect","msUserSelect","userSelect","msTouchAction","touchAction","keys","map","style","appendChild","easingFunctions","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","j","img","push","Image","onload","src","slice","$canvas","width","offsetWidth","height","offsetHeight","resizeImage","$img","realWidth","realHeight","setImage","n","clearRect","pos","spriteWidth","drawImage","console","log","_this","mousedownHandle","onmousedown","mouseupHandle","onmouseup","mousemoveHandle","onmousemove","resizeHandle","start","stop","removeEventListener","remove","stopAnimation","animate","to","duration","easingFunction","arguments","callback","performance","now","progressed","requestAnimationFrame","time","timeFraction","progress","Infinity","Math","abs","direction","nextFrame","bind","e","pageX","touches","screenX","type","preventDefault","mouseMoved","roundMouseMoved","round","set","$element","setAttribute","stringify"],"mappings":"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","sourcesContent":["Object.prototype.merge = function(object){\r\n    for (const key in object) this[key] = object[key];\r\n}","class V360{\r\n\r\n    constructor(){\r\n\r\n        // Get all elements with attribute v360 or V360\r\n        const $v360 = document.querySelectorAll('[v360], [V360]');\r\n\r\n        // Transform this elements into Viewer 360\r\n        for (let i = 0, l = $v360.length; i < l; i++)\r\n            this.init($v360[i]);\r\n\r\n    }\r\n\r\n    init($target){\r\n\r\n        // If you receive start 2 times in a row\r\n        if($target.v360 && $target.v360.played)\r\n            return $target.v360.restart();\r\n\r\n        // It's like an instance. Saves properties for this element\r\n        const props = {\r\n\r\n            target: $target,\r\n\r\n            srcs: undefined,\r\n            sprite: undefined,\r\n            frames: 0,\r\n            dragSensitivity: 5,\r\n\r\n            canvas: this.appendCanvas($target),\r\n\r\n            imgs: [],\r\n            currentFrame: 0,\r\n\r\n            allowDrag: true,\r\n            mousePressing: undefined,\r\n            mouseStart: 0,\r\n\r\n            loadedImages: 0,\r\n            allLoaded: false\r\n\r\n        };\r\n\r\n        // Replace all ' to \"\r\n        props.merge(JSON.parse($target.getAttribute('v360').replace(/\\'/g, '\"')));\r\n\r\n        // Preload all images\r\n        this.preload(props);\r\n        this.onresize(props);\r\n\r\n        // Adds \"commands\" to the element (DOM)\r\n        this.V360DOM($target, props);\r\n\r\n    }\r\n\r\n}\r\n\r\n// On load the page instance the V360\r\nwindow.addEventListener('load', () => window.v360 = new V360());","V360.prototype.appendCanvas = function($target){\r\n\r\n    let canvas = {};\r\n\r\n    canvas.target = document.createElement('canvas');\r\n    this.resizeCanvas($target, canvas.target);\r\n\r\n    canvas.ctx = canvas.target.getContext('2d');\r\n\r\n    const canvasStyle = {\r\n        webkitTouchCallout: 'none',\r\n        webkitUserSelect: 'none',\r\n        khtmlUserSelect: 'none',\r\n        mozUserSelect: 'none',\r\n        msUserSelect: 'none',\r\n        userSelect: 'none',\r\n\r\n        msTouchAction: 'pan-y',\r\n        touchAction: 'pan-y'\r\n    };\r\n    \r\n    Object.keys(canvasStyle).map(style =>\r\n        canvas.target.style[style] = canvasStyle[style]);\r\n\r\n    $target.appendChild(canvas.target);\r\n\r\n    return canvas;\r\n\r\n}","/*  \r\n    * Github: https://gist.github.com/gre/1650294\r\n    * Easing Functions - inspired from http://gizma.com/easing/\r\n    * only considering the t value for the range [0, 1] => [0, 1]\r\n*/\r\nV360.prototype.easingFunctions = {\r\n    // no easing, no acceleration\r\n    linear: function (t) { return t },\r\n    // accelerating from zero velocity\r\n    easeInQuad: function (t) { return t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuad: function (t) { return t*(2-t) },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuad: function (t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t },\r\n    // accelerating from zero velocity \r\n    easeInCubic: function (t) { return t*t*t },\r\n    // decelerating to zero velocity \r\n    easeOutCubic: function (t) { return (--t)*t*t+1 },\r\n    // acceleration until halfway, then deceleration \r\n    easeInOutCubic: function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 },\r\n    // accelerating from zero velocity \r\n    easeInQuart: function (t) { return t*t*t*t },\r\n    // decelerating to zero velocity \r\n    easeOutQuart: function (t) { return 1-(--t)*t*t*t },\r\n    // acceleration until halfway, then deceleration\r\n    easeInOutQuart: function (t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t },\r\n    // accelerating from zero velocity\r\n    easeInQuint: function (t) { return t*t*t*t*t },\r\n    // decelerating to zero velocity\r\n    easeOutQuint: function (t) { return 1+(--t)*t*t*t*t },\r\n    // acceleration until halfway, then deceleration \r\n    easeInOutQuint: function (t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t }\r\n}","V360.prototype.preload = function(props){\r\n\r\n    // Preload all images\r\n    for(let j = 1; j <= props.frames; j++){\r\n\r\n        // Insert and get img from the array\r\n        const img = props.imgs[props.imgs.push(new Image()) - 1];\r\n\r\n        img.onload = this.onload(props);\r\n\r\n        // If is sprite\r\n        if(props.sprite){\r\n            img.src = props.sprite;\r\n            break;\r\n        }\r\n\r\n        img.src = props.srcs.replace('#{frame}', ('000' + j).slice(-3));\r\n\r\n    }\r\n\r\n}","// Place canvas in container size\r\nV360.prototype.resizeCanvas = function($target, $canvas){\r\n\r\n    $canvas.width = $target.offsetWidth;\r\n    $canvas.height = $target.offsetHeight;\r\n\r\n}","V360.prototype.resizeImage = function(props){\r\n\r\n    const $canvas = props.canvas.target;\r\n    const imgs = props.imgs;\r\n    const sprite = !!props.sprite; // Is a sprite\r\n    const frames = props.frames;\r\n\r\n    for(let i = 0, l = imgs.length; i < l; i++){\r\n\r\n        const $img = imgs[i];\r\n\r\n        if(sprite) $img.realWidth = $img.realWidth / frames;\r\n\r\n        // Simple rule of 3\r\n        $img.height = ($img.realHeight * $canvas.width) / $img.realWidth;\r\n        $img.width = $canvas.width;\r\n\r\n        if($img.width > $canvas.width || $img.height > $canvas.height){\r\n\r\n            // Simple rule of 3\r\n            $img.height = $canvas.height;\r\n            $img.width = ($img.realWidth * $canvas.height) / $img.realHeight;\r\n\r\n        }\r\n\r\n        if(sprite) {\r\n            $img.width = $img.width * frames;\r\n            $img.realWidth = $img.realWidth * frames;\r\n        }\r\n\r\n    }\r\n\r\n}","V360.prototype.setImage = function(props, n){\r\n\r\n    if(!props.allLoaded) return;\r\n\r\n    const $canvas = props.canvas.target;\r\n    const ctx = props.canvas.ctx;\r\n    const imgs = props.imgs;\r\n    const frames = props.frames;\r\n    const sprite = !!props.sprite;\r\n\r\n    const $img = imgs[sprite ? 0 : n];\r\n\r\n    ctx.clearRect(0, 0, $canvas.width, $canvas.height);\r\n\r\n    if(sprite){\r\n\r\n        const pos = -(($img.width / frames) * n);\r\n        const spriteWidth = $img.width / frames;\r\n\r\n        ctx.drawImage($img, pos, 0, $img.width, $img.height);\r\n\r\n        ctx.clearRect(spriteWidth, 0, $canvas.width - spriteWidth, $canvas.height);\r\n        \r\n    }else {\r\n        console.log($img, n)\r\n        ctx.drawImage($img, 0, 0, $img.width, $img.height);\r\n    }\r\n\r\n}","V360.prototype.V360DOM = function($target, props){\r\n\r\n    const $canvas = props.canvas.target;\r\n    const frames = props.frames - 1;\r\n\r\n    // Handles\r\n    const mousedownHandle = this.onmousedown(props);\r\n    const mouseupHandle = this.onmouseup(props);\r\n    const mousemoveHandle = this.onmousemove(props);\r\n    const resizeHandle = this.onresize(props);\r\n\r\n    $canvas.addEventListener('mousedown', mousedownHandle);\r\n    window.addEventListener('mouseup', mouseupHandle);\r\n    window.addEventListener('mousemove', mousemoveHandle);\r\n    \r\n    $canvas.addEventListener('touchstart', mousedownHandle);\r\n    window.addEventListener('touchend', mouseupHandle);\r\n    window.addEventListener('touchmove', mousemoveHandle);\r\n\r\n    window.addEventListener('resize', resizeHandle);\r\n\r\n    $target.v360 = { played: true };\r\n\r\n    $target.v360.start = () => {\r\n\r\n        this.init($target);\r\n\r\n        $target.v360.played = true;\r\n\r\n    }\r\n\r\n    $target.v360.stop = () => {\r\n\r\n        // Remove events\r\n        $canvas.removeEventListener('mousedown', mousedownHandle);\r\n        window.removeEventListener('mouseup', mouseupHandle);\r\n        window.removeEventListener('mousemove', mousemoveHandle);\r\n\r\n        $canvas.removeEventListener('touchstart', mousedownHandle);\r\n        window.removeEventListener('touchend', mouseupHandle);\r\n        window.removeEventListener('touchmove', mousemoveHandle);\r\n\r\n        window.removeEventListener('resize', resizeHandle);\r\n\r\n        // Remove canvas of the DOM\r\n        if($canvas) $canvas.remove();\r\n\r\n        $target.v360.played = false;\r\n\r\n    }\r\n\r\n    $target.v360.restart = () => {\r\n\r\n        $target.v360.stop();\r\n        $target.v360.start();\r\n\r\n    }\r\n\r\n    let stopAnimation;\r\n    $target.v360.animate = (to, duration, easingFunction = 'linear', callback) => {\r\n\r\n        let start = performance.now();\r\n        let progressed = 0;\r\n\r\n        props.allowDrag = false;\r\n\r\n        requestAnimationFrame(function animate(time){\r\n\r\n            let timeFraction = (time - start) / duration;\r\n        \r\n            // Calculate the current animation state\r\n            let progress = this.easingFunctions[easingFunction || 'linear'](timeFraction);\r\n        \r\n            if(to == Infinity || to == -Infinity){\r\n\r\n                if(~~timeFraction > progressed){\r\n                    progressed = ~~timeFraction;\r\n                    props.currentFrame += (to == Infinity) ? 1 : -1;\r\n                }\r\n\r\n            }else if(~~(progress * Math.abs(to)) > progressed){\r\n\r\n                progressed = ~~(progress * Math.abs(to));\r\n\r\n                let direction = to / Math.abs(to);\r\n                let nextFrame = props.currentFrame + ~~(progress * to);\r\n                nextFrame = Math.abs(nextFrame / Math.abs(nextFrame));\r\n\r\n                if(direction < 0) nextFrame = -nextFrame;\r\n                \r\n                props.currentFrame += nextFrame;\r\n\r\n            }\r\n\r\n            if(props.currentFrame > frames) props.currentFrame = 0;\r\n            else if(props.currentFrame < 0) props.currentFrame = frames;\r\n\r\n            this.setImage(props, props.currentFrame);\r\n\r\n            if(stopAnimation) return props.allowDrag = !(stopAnimation = false);\r\n\r\n            if(to == Infinity || to == -Infinity) return requestAnimationFrame(animate.bind(this));\r\n\r\n            if(timeFraction < 1) return requestAnimationFrame(animate.bind(this));\r\n            else if(typeof callback == 'function')return callback();\r\n\r\n            // If you get here means the animation has come to an end\r\n            props.allowDrag = true;\r\n\r\n        }.bind(this));\r\n\r\n    }\r\n\r\n    $target.v360.stopAnimation = () => stopAnimation = true;\r\n\r\n    $target.v360.onload = null;\r\n\r\n}","V360.prototype.onload = function(props){\r\n\r\n    return e => {\r\n\r\n        props.loadedImages++;\r\n\r\n        e.target.realWidth = e.target.width;\r\n        e.target.realHeight = e.target.height;\r\n\r\n        // If did not load all images ends here\r\n        if(props.loadedImages < props.frames && !props.sprite) return;\r\n\r\n        props.allLoaded = props.allowDrag = true;\r\n\r\n        this.resizeImage(props);\r\n        this.setImage(props, props.currentFrame);\r\n\r\n        if(typeof props.target.v360.onload == 'function')\r\n            props.target.v360.onload();\r\n\r\n    }\r\n\r\n}","V360.prototype.onmousedown = function(props){\r\n\r\n    return e => {\r\n\r\n        // If drag dont's allowed stop here\r\n        if(!props.allowDrag) return;\r\n\r\n        // Serves to inform the other functions that the user began to drag\r\n        props.mousePressing = true;\r\n\r\n        // Saves the mouse or touch point\r\n        props.mouseStart = e.pageX || e.touches[0].screenX;\r\n\r\n    }\r\n\r\n}","V360.prototype.onmousemove = function(props){\r\n\r\n    return e => {\r\n\r\n        // If is mouse event set preventDefault()\r\n        if(e.type != 'touchmove') e.preventDefault();\r\n\r\n        // If you did not start the drag stop here\r\n        if(!props.mousePressing) return;\r\n\r\n        // Saves the mouse or touch point current\r\n        const pageX = e.pageX || e.touches[0].screenX;\r\n\r\n        let mouseMoved = (props.mouseStart - pageX) / props.dragSensitivity;\r\n\r\n        // Reverse the number pole\r\n        if(mouseMoved > 1) mouseMoved = 1;\r\n        if(mouseMoved < -1) mouseMoved = -1;\r\n\r\n        if(Math.abs(mouseMoved) == 1){\r\n\r\n            // Switches the starting point to the current\r\n            props.mouseStart = pageX;\r\n\r\n            let roundMouseMoved = Math.round(mouseMoved);\r\n\r\n            props.currentFrame += roundMouseMoved / Math.abs(roundMouseMoved);\r\n\r\n            // If the frame is greater than the maximum frame it returns to 0\r\n            if(props.currentFrame > props.frames - 1) props.currentFrame = 0;\r\n\r\n            // If the frame is below 0 it will be the maximum\r\n            if(props.currentFrame < 0) props.currentFrame = props.frames - 1;\r\n\r\n            // Draw image\r\n            this.setImage(props, props.currentFrame);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","V360.prototype.onmouseup = function(props){\r\n\r\n    return () => {\r\n\r\n        // Serves to inform the other functions that the user stopped dragging\r\n        props.mousePressing = false;\r\n        props.mouseStart = 0;\r\n\r\n    }\r\n\r\n}","V360.prototype.onresize = function(props){\r\n\r\n    return () => {\r\n\r\n        const $target = props.target;\r\n        const $canvas = props.canvas.target;\r\n\r\n        // If the container changes size\r\n        if($canvas.width != $target.offsetWidth || $canvas.height != $target.height){\r\n\r\n            const currentFrame = props.currentFrame;\r\n\r\n            this.resizeCanvas($target, $canvas);\r\n            this.resizeImage(props);\r\n\r\n            this.setImage(props, currentFrame);\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n}","// Restart the viewer\r\nV360.prototype.restart = function(){\r\n\r\n    const $v360 = document.querySelectorAll('[v360], [V360]');\r\n\r\n    for (let i = 0, l = $v360.length; i < l; i++)\r\n        $v360[i].v360.restart();\r\n\r\n}","// Transform an element that is not a 360 viewer into a\r\nV360.prototype.set = function($element, props, callback){\r\n\r\n    $element.setAttribute('v360', JSON.stringify(props).replace(/\\\"/g, \"'\"));\r\n\r\n    this.init($element);\r\n\r\n    $element.v360.onload = callback;\r\n\r\n    return $element.v360;\r\n\r\n}","// Start viewer (Do not confuse with $DOM.v360.animation)\r\nV360.prototype.start = function(){\r\n\r\n    const $v360 = document.querySelectorAll('[v360], [V360]');\r\n\r\n    for (let i = 0, l = $v360.length; i < l; i++)\r\n        $v360[i].v360.start();\r\n\r\n}","// Stop the viewer (Do not confuse with $DOM.v360.stopAnimation)\r\nV360.prototype.stop = function(){\r\n\r\n    const $v360 = document.querySelectorAll('[v360], [V360]');\r\n\r\n    for (let i = 0, l = $v360.length; i < l; i++)\r\n        $v360[i].v360.stop();\r\n\r\n}"],"file":"v360-min.js"}